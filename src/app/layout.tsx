import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ToastContainer from "@/components/providers/toast/ToastContainer";
import Navbar from "@/components/ui/nav/Navbar";
import { getSiteSettings } from "@/lib/payloadcms/payloadcms";
import { SiteSettingsProvider } from "@/context/site-settings-context";
import { AuthProvider } from "@/context/auth-context";
import { getCurrentUserServer } from "@/lib/auth/auth-server";
import { ApiProvider } from "@/context/api-context";
import Footer from "@/components/ui/footer/Footer";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const initialUser = await getCurrentUserServer()
  const settings = await getSiteSettings();

  return (
    <html lang="en">
      <head></head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased dark`}
      >
          <AuthProvider initialUser={initialUser}>
            <ApiProvider>
              <SiteSettingsProvider value={null}>
                <div className="min-h-screen h-screen w-screen flex flex-col md:grid grid-cols-[auto_1fr]">
                  <Navbar navigationBar={settings.navigationBar} userLoggedIn={initialUser} />
                  <div className="flex flex-col overflow-hidden">
                    <div className="flex-1 bg-muted/10 overflow-x-hidden bg-primary">
                      <main className="min-h-screen">
                        {children}
                      </main>
                      {/* TODO: remove this... */}
                      <Footer {...settings.footer} />
                    </div>
                  </div>
                </div>
                <ToastContainer />
              </SiteSettingsProvider>
            </ApiProvider>
          </AuthProvider>
      </body>
    </html>
  );
}
